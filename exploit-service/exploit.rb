require 'sinatra'
require 'sinatra/flash'
require 'bcrypt'
require './lib/Users'

ALL_RANGES = ENV['ALL_RANGES'] || "/home/ec2-user/heartbleed_scanner/all-ranges.txt"
LOCK_FILE = ENV['LOCK_FILE'] || "/home/ec2-user/heartbleed_scanner/running.lock"
RESULTS_FILE = ENV['RESULTS_FILE'] || "/home/ec2-user/heartbleed_scanner/results.txt"
SCAN_DIR = ENV['SCAN_DIR'] || "/home/ec2-user/heartbleed_scanner/"
SCAN_SCRIPT = ENV['SCAN_SCRIPT'] || "./scan.sh"

class ExploitService < Sinatra::Base
  enable :sessions
  register Sinatra::Flash

  helpers do
    def protected!
      return if authorized?
      headers['WWW-Authenticate'] = 'Basic realm="Restricted Area"'
      halt 401, "Not authorized\n"
    end

    def authorized?
      @auth ||= Rack::Auth::Basic::Request.new(request.env)
      @auth.provided? and @auth.basic? and @auth.credentials and Users.authenticate(@auth.credentials[0],@auth.credentials[1])
    end
  end

  get '/health' do
    erb :health
  end
  
  get '/' do
    protected!
    @results = ""
    if File.exist?(LOCK_FILE)
      if File.exist?(RESULTS_FILE)
        @results = File.read(RESULTS_FILE)
      end
      erb :scanning
    else
      erb :index
    end
  end

  post '/' do
    protected!
    @ranges = params[:ranges].each_line.map{|o| o.strip}.find_all{|o| o != ""}
    File.open(ALL_RANGES, 'w') do |f|
      @ranges.each do |range|
        f.puts(range)
      end
    end
    $stderr.puts "Moving to: #{SCAN_DIR}"
    $stderr.puts "Running: #{SCAN_SCRIPT}"
    fork {Dir.chdir(SCAN_DIR) ; system(SCAN_SCRIPT)}
    sleep(1)
    redirect '/'
  end
end
